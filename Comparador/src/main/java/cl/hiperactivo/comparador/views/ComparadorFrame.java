/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.hiperactivo.comparador.views;

import cl.hiperactivo.comparador.controllers.ArchivoController;
import cl.hiperactivo.comparador.controllers.ComparadorController;
import cl.hiperactivo.comparador.models.Linea;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author hb
 */
public class ComparadorFrame extends javax.swing.JFrame implements ComparadorController.ComparadorDelegate {

    private JFileChooser fileChooser;
    private File archivoUno;
    private File archivoDos;
    private ComparadorController comparadorController;

    private Highlighter.HighlightPainter cyanPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.cyan);
    private Highlighter.HighlightPainter redPainter = new DefaultHighlighter.DefaultHighlightPainter(new Color(255,102,102));
    private Highlighter.HighlightPainter greenPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.green);

    /**
     * Creates new form ComparadorFrame
     */
    public ComparadorFrame() {
        initComponents();
        //Ícono de la aplicación
        URL url = ClassLoader.getSystemResource("paper.png");
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.createImage(url);
        this.setIconImage(img);
    }

    @Override
    protected void frameInit() {
        super.frameInit();
        this.comparadorController = new ComparadorController();
        this.comparadorController.setDelegate(this);
        this.setLocationRelativeTo(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        archivoUnoButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoUnoTextArea = new javax.swing.JTextArea();
        rutaUnoTextField = new javax.swing.JTextField();
        hashUnoTextfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        archivoDosButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textoDosTextArea = new javax.swing.JTextArea();
        rutaDosTextField = new javax.swing.JTextField();
        hashDosTextfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Comparador");
        setMinimumSize(new java.awt.Dimension(660, 400));
        setPreferredSize(new java.awt.Dimension(660, 400));

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setLastDividerLocation(300);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(600, 100));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(600, 276));

        archivoUnoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder32.png"))); // NOI18N
        archivoUnoButton.setText("Seleccionar  archivo 1");
        archivoUnoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivoUnoButtonMouseClicked(evt);
            }
        });

        textoUnoTextArea.setColumns(20);
        textoUnoTextArea.setLineWrap(true);
        textoUnoTextArea.setRows(5);
        jScrollPane1.setViewportView(textoUnoTextArea);

        rutaUnoTextField.setEditable(false);

        hashUnoTextfield.setEditable(false);

        jLabel3.setText("Nombre:");

        jLabel2.setText("Hash");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(archivoUnoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(hashUnoTextfield)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rutaUnoTextField))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(archivoUnoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rutaUnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hashUnoTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel3);

        jPanel4.setPreferredSize(new java.awt.Dimension(300, 276));

        archivoDosButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder32.png"))); // NOI18N
        archivoDosButton.setText("Seleccionar archivo 2");
        archivoDosButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivoDosButtonMouseClicked(evt);
            }
        });

        textoDosTextArea.setColumns(20);
        textoDosTextArea.setLineWrap(true);
        textoDosTextArea.setRows(5);
        jScrollPane2.setViewportView(textoDosTextArea);

        rutaDosTextField.setEditable(false);

        hashDosTextfield.setEditable(false);

        jLabel5.setText("Nombre:");

        jLabel1.setText("Hash");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(archivoDosButton, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(hashDosTextfield)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rutaDosTextField)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(archivoDosButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rutaDosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hashDosTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void archivoUnoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivoUnoButtonMouseClicked
        // TODO add your handling code here:
        fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("*.txt", "txt"));
        switch (fileChooser.showOpenDialog(this)) {
            case JFileChooser.APPROVE_OPTION:
                System.out.println("Aceptar");
                this.archivoUno = fileChooser.getSelectedFile();
                rutaUnoTextField.setText(fileChooser.getSelectedFile().getName());
                comparadorController.compararIgualdadLineaALinea(archivoUno,archivoDos);

                textoUnoTextArea.setText(ArchivoController.abrirArchivo(archivoUno));
                this.hashUnoTextfield.setText(ArchivoController.obtenerHashDeArchivo(archivoUno));
                break;
            case JFileChooser.CANCEL_OPTION:
                System.out.println("Cancelar");
                break;
            case JFileChooser.ERROR_OPTION:
                System.out.println("Error");
                break;
        }

    }//GEN-LAST:event_archivoUnoButtonMouseClicked

    private void archivoDosButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivoDosButtonMouseClicked
        // TODO add your handling code here:
        fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("*.txt", "txt"));
        switch (fileChooser.showOpenDialog(this)) {
            case JFileChooser.APPROVE_OPTION:
                System.out.println("Aceptar");
                this.archivoDos = fileChooser.getSelectedFile();
                rutaDosTextField.setText(fileChooser.getSelectedFile().getName());
                comparadorController.compararIgualdadLineaALinea(archivoUno,archivoDos);
                
                textoDosTextArea.setText(ArchivoController.abrirArchivo(archivoDos));
                hashDosTextfield.setText(ArchivoController.obtenerHashDeArchivo(archivoDos));

                break;
            case JFileChooser.CANCEL_OPTION:
                System.out.println("Cancelar");
                break;
            case JFileChooser.ERROR_OPTION:
                System.out.println("Error");
                break;
        }
    }//GEN-LAST:event_archivoDosButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComparadorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComparadorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComparadorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComparadorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComparadorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton archivoDosButton;
    private javax.swing.JButton archivoUnoButton;
    private javax.swing.JTextField hashDosTextfield;
    private javax.swing.JTextField hashUnoTextfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField rutaDosTextField;
    private javax.swing.JTextField rutaUnoTextField;
    private javax.swing.JTextArea textoDosTextArea;
    private javax.swing.JTextArea textoUnoTextArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onComparadorPorLineaEncontradas(ArrayList<Linea> encontradas) {
        System.out.println("onComparadorPorLineaEncontradas");
        
        try {
            System.out.println(encontradas);
            for(Linea linea:encontradas){
                textoDosTextArea.getHighlighter().addHighlight(linea.getInicio(), linea.getFin(), redPainter);
            }
        } catch (BadLocationException ble) {
            System.out.println(ble.getLocalizedMessage());
        }        

        //Repintar ¿por?
        textoDosTextArea.getHighlighter().paint(this.getGraphics());
    }

    @Override
    public void onComparadorPorLineaNoEncontradas() {
        System.out.println("onComparadorPorLineaNoEncontradas");
        
        textoUnoTextArea.getHighlighter().removeAllHighlights();
        textoDosTextArea.getHighlighter().removeAllHighlights();

    }

    @Override
    public void onComparadorDeContenidoExito(String mensaje) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onComparadorDeContenidoError(String error) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }    
    
}
